name: Building Rust Binding And Upload Artifacts
on: workflow_call

jobs:
  build:
    name: Build and Upload Artifacts - ${{ matrix.settings.abi }}
    runs-on: ${{ matrix.settings.os }}
    strategy:
      fail-fast: false
      matrix:
        settings:
          - os: ubuntu-latest
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            abi: linux-x64-gnu
            build: >-
              set -e &&
              unset CC_x86_64_unknown_linux_gnu &&
              unset CC &&
              cd packages/core &&
              npm run build:rs:publish -- --target x86_64-unknown-linux-gnu
          - os: windows-latest
            abi: win32-x64-msvc

          # cross compile
          # windows
          - os: windows-latest
            abi: win32-ia32-msvc
            target: i686-pc-windows-msvc
          - os: windows-latest
            abi: win32-arm64-msvc
            target: aarch64-pc-windows-msvc
          # linux
          - os: ubuntu-latest
            abi: linux-arm64-musl
            target: aarch64-unknown-linux-musl
            zig: true
          - os: ubuntu-latest
            abi: linux-arm64-gnu
            target: aarch64-unknown-linux-gnu
            zig: true
          # macos
          # cross compile macos cause github runners is limited for macos.
          # It always wait for a long time to get a macos runner. So we use cross compile instead to save time.
          - os: ubuntu-latest
            abi: darwin-x64
            target: x86_64-apple-darwin
            zig: false
          - os: ubuntu-latest
            abi: darwin-arm64
            target: aarch64-apple-darwin
            zig: false
    steps:
      - uses: actions/checkout@v3
      - name: Cache rust artifacts
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: rust-build-${{ matrix.settings.abi }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Dependencies
        run: npm install -g pnpm && pnpm i --frozen-lockfile
      - run: rustup target add ${{ matrix.settings.target }}
        if: ${{ matrix.settings.target }}
      - uses: goto-bus-stop/setup-zig@v2
        if: ${{ matrix.settings.zig }}
      - name: Build in docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: -v ${{ env.HOME }}/.cargo/git:/root/.cargo/git -v ${{ env.HOME }}/.cargo/registry:/root/.cargo/registry -v ${{ github.workspace }}:/build -w /build
          run: ${{ matrix.settings.build }}
      - name: Build
        if: ${{ !matrix.settings.docker }}
        run: cd packages/core && npm run build:rs:publish -- ${{ matrix.settings.target && format('--target {0}', matrix.settings.target) || '' }} ${{ matrix.settings.zig && '--zig' || '' }}
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}-${{ matrix.settings.abi }}
          path: ./packages/core/binding/farm.${{ matrix.settings.abi }}.node
