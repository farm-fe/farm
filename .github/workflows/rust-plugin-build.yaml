name: Plugin - Building Rust Binding And Upload Artifacts
on:
  workflow_call:
    inputs:
      root:
        type: string
        required: true
        description: the path of the plugin, for example, rust-plugins/react
      name:
        type: string
        required: true
        description: the name of the uploaded artifacts

jobs:
  # cross compile arm64 macos cause github runners does not native support it
  cross-build-mac-arm:
    name: Build and Upload Artifacts - darwin-arm64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: oxidecomputer/actions-rs_toolchain@oxide/master
      - name: Cache rust artifacts
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: rust-build-mac-arm
          
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Dependencies
        run: npm install -g pnpm && pnpm i --frozen-lockfile
      - run: rustup target add aarch64-apple-darwin
      - run: wget --quiet https://ziglang.org/download/0.10.1/zig-linux-x86_64-0.10.1.tar.xz
      - run: tar -xf zig-linux-x86_64-0.10.1.tar.xz
      - run: mv zig-linux-x86_64-0.10.1 ~/
      - run: ln -s ~/zig-linux-x86_64-0.10.1/zig /usr/local/bin

      - name: Build Farm cli
        run: cd packages/cli && npm run build -- -b
      - name: Build - Arm64
        run: cd ${{ inputs.root }} && npm run build -- --target aarch64-apple-darwin --zig
      - name: Copy Artifacts
        run: cd ${{ inputs.root }} && npm run copy-artifacts -- --target aarch64-apple-darwin
      - name: Upload - Arm64
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}-darwin-arm64-${{ inputs.name }}
          path: ${{ inputs.root }}/npm/darwin-arm64/index.farm
  build:
    name: Build and Upload Artifacts
    runs-on: ${{ matrix.settings.os }}
    strategy:
      fail-fast: false
      matrix:
        settings:
          - os: ubuntu-latest
            abi: linux-x64-gnu
          - os: macos-latest
            abi: darwin-x64
          - os: windows-latest
            abi: win32-x64-msvc
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: oxidecomputer/actions-rs_toolchain@oxide/master
      - name: Cache rust artifacts
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: rust-plugin-build-${{ matrix.settings.os }}
          
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Dependencies
        run: npm install -g pnpm && pnpm i --frozen-lockfile
      - name: Build Farm cli
        run: cd packages/cli && npm run build -- -b

      - name: Build - ${{ matrix.settings.abi }}-${{ inputs.name }}
        run: cd ${{ inputs.root }} && npm run build
      - name: Copy Artifacts
        run: cd ${{ inputs.root }} && npm run copy-artifacts
      - name: Upload - ${{ matrix.settings.abi }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}-${{ matrix.settings.abi }}-${{ inputs.name }}
          path: ${{ inputs.root }}/npm/${{ matrix.settings.abi }}/index.farm
