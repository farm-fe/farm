/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

/** Resolve hook filters, works as `||`. If any importers or sources matches any regex item in the Vec, we treat it as filtered. */
export interface JsPluginResolveHookFilters {
  importers: Array<string>
  sources: Array<string>
}
export interface JsPluginLoadHookFilters {
  resolvedPaths: Array<string>
}
export interface JsPluginTransformHookFilters {
  resolvedPaths: Array<string>
}
export interface JsUpdateResult {
  added: Array<string>
  changed: Array<string>
  removed: Array<string>
  modules: string
  boundaries: Record<string, Array<Array<string>>>
  dynamicResourcesMap?: Record<string, Array<Array<string>>>
}
export type JsCompiler = Compiler
export class Compiler {
  constructor(config: object)
  /**
   * async compile, return promise
   *
   * TODO: usage example
   */
  compile(): Promise<void>
  /** sync compile */
  compileSync(): void
  /** TODO: usage example */
  update(paths: Array<string>, callback: (...args: any[]) => any): object
  hasModule(resolvedPath: string): boolean
  resources(): Record<string, Buffer>
  relativeModulePaths(): Array<string>
  resource(name: string): Buffer | null
}
